#+TITLE: Git Guide
#+AUTHOR: Li Yang
#+DATE: 2018.7.19
#+EMAIL: 7325560@qq.com

#+REVEAL_THEME: moon
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+REVEAL_EXTRA_CSS: ./data/custom.css

* VCS
Version Control System
- CVS
- SVN, Subversion
- Hg, Mercurial
- Git
- Perforce

#+REVEAL: split
| Name | Depoly          | Management          |
|------+-----------------+---------------------|
| SVN  | Client - Server | Changeset, Snapshot |
| Git  | Distribution    | Snapshot            |

* 
#+ATTR_HTML: :class icon
[[./data/git-icon.png]]

* Basic Usage

** Config
Config _username_ and _email_
#+BEGIN_SRC shell
git config --global user.name "liyang"
git config --global user.email "7325560@qq.com"
#+END_SRC

** Create Repository
Get from remote repository
#+BEGIN_SRC shell
git clone git@192.168.1.120:ink-sanguo-dev 
git clone http://github.com:wood9366/dot-emacs .emacs.d
#+END_SRC

#+BEGIN_SRC shell
git clone (Host Name):(Repository Name) [Local Directory Name]
#+END_SRC

Create at local directory
#+BEGIN_SRC shell
git init .
#+END_SRC

** Add File
#+BEGIN_SRC shell
echo 'Hello!' > ./README.md
git add .
git commit -m "add readme file"
#+END_SRC

** Change File
#+BEGIN_SRC shell
echo '=======' >> ./README.md
git add -u
git commit -m "add split line in readme file"
#+END_SRC

** Review Log
#+BEGIN_SRC shell
git log
#+END_SRC

* What happened?
** .git
#+BEGIN_SRC shell
.git
  config       # repo config
  info/exclude # repo exclude filter
  logs/        # record branch change
  refs/        # referencs (branches)
  index        # index (stage) data
  objects/     # objects data
  hooks/       # git hook script
#+END_SRC

** Objects
- Git manage all things by _object_
- All objects store in .git/objects/
- Eash object has unique id (40 bit hash)
- 4 main object type:
  - commit
  - tree (directory)
  - blob (file)
  - tag

#+REVEAL: split
#+BEGIN_SRC shell
git cat-file -t object # get object type
git cat-file -p object # print object info
#+END_SRC

#+BEGIN_SRC shell
git rev-parse HEAD                      # parse reversion to hash
git rev-parse --symbolic-full-name HEAD # parse reversion to refs/
#+END_SRC

** Refs
- Git manage branch by reference
- All reference store in .git/refs/
- Reference is a file inclues commit object hash

#+BEGIN_SRC shell
.git/refs
  remotes/ # remote branches
  heads/   # local branches
  stash
#+END_SRC

** Logs
- Log record change history of each _reference_

#+BEGIN_SRC shell
.git/logs
  HEAD
  refs/heads/
  refs/remotes/
  refs/stash
#+END_SRC

** Management commit with Snapshot
- Snapshot vs Store size

* More Usage
** Config
[Table] Usage Scope, Store Location (Linux, Windows)
#+REVEAL: split
#+BEGIN_SRC shell
git config --list
git config --global color.ui "auto"
git config --local ...
git config --system ...
#+END_SRC
#+REVEAL: split
#+BEGIN_SRC shell
git config --global alias.ci commit
git config --global alias.co checkout
git config --global alias.st status
git config --global alias.br branch
#+END_SRC
[Picture]
* Create
#+BEGIN_SRC shell
git clone http://github.com:guns/ink-sanguo
git clone --depth 1 # no history info, save space
git init
git init --bare # no work space
#+END_SRC
* Stage
Cached
Index
#+BEGIN_SRC shell
git add -u
git add .
git add -- file
git add -i

git rm file
git rm --cached file

git mv file1 file2
#+END_SRC
* Unstage
#+BEGIN_SRC shell
git reset
#+END_SRC
- [Picture]
* Work Space <-> Index <-> Repository Current Branch
- git checkout vs git reset
* Commit, Diff
- git status
- git commit
- git commit -a
- git diff
* Check Log
- git log --graph -a
* Sync
- git pull
- git push
* What happened ?
* Remote
- git remote -v
- git remote -vv
- git remote add sync-origin git@192.168.1.100:ink-sanguo
- git remote set sync-origin git@192.168.1.100:ink-sanguo
* Branch
** Branch Implementation
- C++ Pointer, Smart, easy and light weight way to track branch
- [Picture Branch]
- Where is branch store ?
** More Branch
- Local Branch
- Remote Branch
** Branch operation
- git branch -a -v
- git checkout publish
  - check remote has same name branch
  - create local branch with that name
  - set remote branch to be up stream of local branch
  - switch to created local branch
- git checkout -b bug/203003
* Merge vs Rebase
* Books
- Git权威指南, ISBN 9787111349679
- Pro Git, official, https://git-scm.com/book/en/v2
